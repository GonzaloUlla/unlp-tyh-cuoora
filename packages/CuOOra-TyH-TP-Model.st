Object subclass: #CuOOra	instanceVariableNames: 'usuarios tópicos'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-TyH-TP-Model'!!CuOOra commentStamp: '<historical>' prior: 0!Class part:  "I represent CuOOra system".Responsibility part: "What I do: manage general CuOOra's entities"Collaborators Part: "Topics and Users"!!CuOOra methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:22'!conocerUsuarios	"Retorna los Usuarios de CuOOra (una copia para no romper el encapsulamiento de la colección)"	^ usuarios copy! !!CuOOra methodsFor: 'api' stamp: 'GonzaloUlla 7/1/2019 23:24'!eliminarPregunta: unaPregunta	"Elimina unaPregunta de todo CuOOra:		1) Elimina todos los votos de las respuestas de unaPregunta		2) Elimina todas las respuestas de unaPregunta y de sus usuarios		3) Elimina todos los votos de unaPregunta		4) Elimina unaPregunta de todos los usuarios		5) Elimina unaPregunta de todos los tópicos"	unaPregunta eliminarTodasRespuestas.	unaPregunta eliminarTodosVotos.	usuarios		do: [ :usuario | 			(usuario conocerPreguntas includes: unaPregunta)				ifTrue: [ usuario eliminarPregunta: unaPregunta ] ].	tópicos		do: [ :tópico | 			(tópico conocerPreguntas includes: unaPregunta)				ifTrue: [ tópico eliminarPregunta: unaPregunta ] ]! !!CuOOra methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:22'!conocerTópicos	"Retorna los Tópicos de CuOOra (una copia para no romper el encapsulamiento de la colección)"	^ tópicos copy! !!CuOOra methodsFor: 'api' stamp: 'GitHub 6/30/2019 16:38:45'!agregarUsuario: unUsuario	usuarios add: unUsuario! !!CuOOra methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 17:15'!agregarTópico: unTópico	tópicos add: unTópico! !!CuOOra methodsFor: 'initialization' stamp: 'GonzaloUlla 6/30/2019 17:15'!initialize	super initialize.	tópicos := OrderedCollection new.	usuarios := OrderedCollection new! !Object subclass: #Entrada	instanceVariableNames: 'usuario fechaCreación texto votosPositivos votosNegativos'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-TyH-TP-Model'!!Entrada commentStamp: '<historical>' prior: 0!Class part:  "Represento una Entrada abstracta en CuOOra".Responsibility part: "Lo que hago: Reúno estructura común a Preguntas y Respuestas"Collaborators Part: "Preguntas, Respuestas, Votos y Usuarios"!!Entrada methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!texto: anObject	texto := anObject! !!Entrada methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!usuario: anObject	usuario := anObject! !!Entrada methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!fechaCreación	^ fechaCreación! !!Entrada methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!fechaCreación: anObject	fechaCreación := anObject! !!Entrada methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!texto	^ texto! !!Entrada methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!usuario	^ usuario! !!Entrada methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:00'!agregarVotoPositivo: unVoto	votosPositivos add: unVoto! !!Entrada methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:01'!agregarVotoNegativo: unVoto	votosNegativos add: unVoto! !!Entrada methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:29'!eliminarTodosVotos	votosNegativos removeAll.	votosPositivos removeAll! !!Entrada methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:32'!calcularPuntaje	^ votosPositivos size - votosNegativos size! !!Entrada methodsFor: 'api' stamp: 'GonzaloUlla 7/1/2019 01:21:21'!conocerVotosPositivos	"Retorna las Votos Positivos de la Entrada (una copia para no romper el encapsulamiento de la colección)"	^ votosPositivos copy! !!Entrada methodsFor: 'api' stamp: 'GonzaloUlla 7/1/2019 23:33'!eliminarUsuario	self usuario: nil! !!Entrada methodsFor: 'api' stamp: 'GonzaloUlla 7/1/2019 01:21:21'!conocerVotosNegativos	"Retorna las Votos Negativos de la Entrada (una copia para no romper el encapsulamiento de la colección)"	^ votosNegativos copy! !!Entrada methodsFor: 'converting' stamp: 'GonzaloUlla 6/30/2019 17:34'!asString	^ ' - Texto: ' , texto , ' - Usuario: ' , usuario nombre , ' - Fecha Creación: '		, fechaCreación asString! !!Entrada methodsFor: 'initialization' stamp: 'GonzaloUlla 6/30/2019 23:10:22'!initialize	super initialize.	fechaCreación := DateAndTime now.	texto := ''.	usuario := ''.	votosNegativos := OrderedCollection new.	votosPositivos := OrderedCollection new.! !Entrada subclass: #Pregunta	instanceVariableNames: 'título tópicosRelacionados respuestas'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-TyH-TP-Model'!!Pregunta commentStamp: 'GonzaloUlla 6/30/2019 16:55' prior: 0!Class part:  "Represento una Pregunta en CuOOra".Responsibility part: "Lo que hago:  Permito crear y gestionar una Pregunta"Collaborators Part: "Tópico, Respuestas, Votos y Usuarios"!!Pregunta methodsFor: 'converting' stamp: 'GonzaloUlla 6/30/2019 18:10'!asString	"Retorna una Pregunta como un String"	| tópicos |	tópicos := ''.	tópicosRelacionados do: [ :x | tópicos := tópicos , x nombre , ' ' ].	^ String cr , 'Título: ' , título , ' - Tópicos Relacionados: ' , tópicos , super asString! !!Pregunta methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!título	^ título! !!Pregunta methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!título: anObject	título := anObject! !!Pregunta methodsFor: 'initialization' stamp: 'GonzaloUlla 6/30/2019 17:50'!initialize	"Inicialización de una Pregunta"	super initialize.	título := ''.	tópicosRelacionados := OrderedCollection new.	respuestas := SortedCollection new! !!Pregunta methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:11'!conocerRespuestas	"Retorna las Respuestas a la Pregunta ordenadas por cantidad de likes de mayor a menor"	^ respuestas reversed! !!Pregunta methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:17'!conocerTópicosRelacionados	^ tópicosRelacionados copy! !!Pregunta methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 18:10'!agregarTópicoRelacionado: unTópico	tópicosRelacionados add: unTópico! !!Pregunta methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:20'!calcularPuntajePromedioRespuestas	"Retorna el puntaje promedio de todas las Respuestas a la Pregunta"	| puntajeTotal |	puntajeTotal := 0.	respuestas do: [ :respuesta | puntajeTotal := puntajeTotal + respuesta calcularPuntaje ].	^ (puntajeTotal / respuestas size) asFloat! !!Pregunta methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 18:09'!agregarRespuesta: unaRespuesta	respuestas add: unaRespuesta! !!Pregunta methodsFor: 'api' stamp: 'GonzaloUlla 7/1/2019 23:28'!eliminarTodasRespuestas	"Elimina todos los Votos de cada Respuesta y luego todas las Respuestas de sus usuarios y de la Pregunta"	respuestas do: [ :respuesta | respuesta eliminarTodosVotos eliminarUsuario ].	respuestas removeAll! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pregunta class	instanceVariableNames: ''!!Pregunta class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 18:55'!usuario: unUsuario fechaCreación: unaFecha título: unTítulo texto: unTexto tópicoRelacionado: unTópico	"Constructor de Pregunta"	| nuevaPregunta |	nuevaPregunta := self new.	nuevaPregunta usuario: unUsuario.	nuevaPregunta fechaCreación: unaFecha.	nuevaPregunta título: unTítulo.	nuevaPregunta texto: unTexto.	nuevaPregunta agregarTópicoRelacionado: unTópico.		^ nuevaPregunta! !!Pregunta class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 18:52'!usuario: unUsuario título: unTítulo texto: unTexto tópicoRelacionado: unTópico	"Constructor de Pregunta"	| nuevaPregunta |	nuevaPregunta := self new.	nuevaPregunta usuario: unUsuario.	nuevaPregunta fechaCreación: DateAndTime now.	nuevaPregunta título: unTítulo.	nuevaPregunta texto: unTexto.	nuevaPregunta agregarTópicoRelacionado: unTópico.		^ nuevaPregunta! !Entrada subclass: #Respuesta	instanceVariableNames: 'preguntaReferida'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-TyH-TP-Model'!!Respuesta commentStamp: '<historical>' prior: 0!Class part:  "Represento una Respuesta en CuOOra".Responsibility part: "Lo que hago:  Permito crear y gestionar una Respuesta a una Pregunta"Collaborators Part: "Pregunta, Votos y Usuarios"!!Respuesta methodsFor: 'comparing' stamp: 'GonzaloUlla 6/30/2019 19:37'!= otraRespuesta	^ self calcularPuntaje = otraRespuesta calcularPuntaje! !!Respuesta methodsFor: 'comparing' stamp: 'GonzaloUlla 6/30/2019 19:37'!>= otraRespuesta	^ self calcularPuntaje >= otraRespuesta calcularPuntaje! !!Respuesta methodsFor: 'comparing' stamp: 'GonzaloUlla 6/30/2019 19:37'!> otraRespuesta	^ self calcularPuntaje > otraRespuesta calcularPuntaje! !!Respuesta methodsFor: 'comparing' stamp: 'GonzaloUlla 6/30/2019 19:37'!< otraRespuesta	^ self calcularPuntaje < otraRespuesta calcularPuntaje! !!Respuesta methodsFor: 'comparing' stamp: 'GonzaloUlla 6/30/2019 19:37'!<= otraRespuesta	^ self calcularPuntaje <= otraRespuesta calcularPuntaje! !!Respuesta methodsFor: 'converting' stamp: 'GitHub 6/30/2019 16:38:45'!asString	^ String cr, 'Pregunta Referida: ', preguntaReferida texto, super asString.! !!Respuesta methodsFor: 'initialization' stamp: 'GonzaloUlla 7/1/2019 02:06'!initialize	"Inicialización de una Respuesta"	super initialize.	preguntaReferida := ''! !!Respuesta methodsFor: 'accessing' stamp: 'GonzaloUlla 6/30/2019 18:04'!preguntaReferida: unaPregunta	preguntaReferida := unaPregunta! !!Respuesta methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!preguntaReferida	^ preguntaReferida! !!Respuesta methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:14'!dentroDeMejoresRespuestas	"Retorna true/false dependiendo si el puntaje de la Respuesta es mayor o igual al promedio de puntaje de todas las respuestas a esa Pregunta"	^ self calcularPuntaje >= preguntaReferida calcularPuntajePromedioRespuestas! !!Respuesta methodsFor: 'api' stamp: 'GonzaloUlla 7/1/2019 23:39'!eliminarUsuario	"Elimina el Usuario de la Respuesta y la Respuesta del Usuario"	(usuario conocerRespuestas includes: self)		ifTrue: [ usuario eliminarRespuesta: self ].	super eliminarUsuario! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Respuesta class	instanceVariableNames: ''!!Respuesta class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 18:56'!usuario: unUsuario fechaCreación: unaFecha texto: unTexto preguntaReferida: unaPregunta	"Constructor de Respuesta"	| nuevaRespuesta |	nuevaRespuesta := self new.	nuevaRespuesta usuario: unUsuario.	nuevaRespuesta fechaCreación: unaFecha.	nuevaRespuesta texto: unTexto.	nuevaRespuesta preguntaReferida: unaPregunta.	^ nuevaRespuesta! !!Respuesta class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 18:56'!usuario: unUsuario texto: unTexto preguntaReferida: unaPregunta	"Constructor de Respuesta"	| nuevaRespuesta |	nuevaRespuesta := self new.	nuevaRespuesta usuario: unUsuario.	nuevaRespuesta fechaCreación: DateAndTime now.	nuevaRespuesta texto: unTexto.	nuevaRespuesta preguntaReferida: unaPregunta.	^ nuevaRespuesta! !Object subclass: #Tópico	instanceVariableNames: 'nombre descripción preguntas'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-TyH-TP-Model'!!Tópico commentStamp: '<historical>' prior: 0!Class part:  "Represento un Tópico en CuOOra".Responsibility part: "Lo que hago:  Permito crear y gestionar un Tópico"Collaborators Part: "Preguntas y Usuarios"!!Tópico methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!descripción	^ descripción! !!Tópico methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!nombre: anObject	nombre := anObject! !!Tópico methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!nombre	^ nombre! !!Tópico methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!descripción: anObject	descripción := anObject! !!Tópico methodsFor: 'initialization' stamp: 'GonzaloUlla 6/30/2019 17:25'!initialize	"Inicialización de un Tópico"	super initialize.	nombre := ''.	descripción := ''.	preguntas := OrderedCollection new! !!Tópico methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:39'!conocerPreguntas	"Retorna las Preguntas referidas al Tópico (una copia para no romper el encapsulamiento de la colección)"	^ preguntas copy! !!Tópico methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:30'!eliminarPregunta: unaPregunta	^ preguntas remove: unaPregunta! !!Tópico methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:10'!agregarPregunta: unaPregunta	^ preguntas add: unaPregunta! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tópico class	instanceVariableNames: ''!!Tópico class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 17:28'!nombre: unNombre descripción: unaDescripción	"Constructor de Tópico"	| nuevoTópico |	nuevoTópico := self new.	nuevoTópico nombre: unNombre.	nuevoTópico descripción: unaDescripción.	^ nuevoTópico! !Object subclass: #Usuario	instanceVariableNames: 'nombre contraseña fechaCreación tópicosInterés sigueA preguntas respuestas'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-TyH-TP-Model'!!Usuario commentStamp: '<historical>' prior: 0!Class part:  "Represento un Usuario en CuOOra".Responsibility part: "Lo que hago:  Permito crear y gestionar un Usuario, sus Preguntas y Respuestas, y sus Votos"Collaborators Part: "Preguntas, Respuestas, Votos y Tópicos"!!Usuario methodsFor: 'api' stamp: 'GitHub 6/30/2019 16:38:45'!agregarTópicoInterés: unTópico	tópicosInterés add: unTópico! !!Usuario methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 20:27'!eliminarPregunta: unaPregunta	preguntas remove: unaPregunta! !!Usuario methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 23:40'!conocerUsuariosSeguidos	"Retorna los demàs usuarios seguidos por el Usuario (una copia para no romper el encapsulamiento de la colección)"	^ sigueA copy! !!Usuario methodsFor: 'api' stamp: 'GonzaloUlla 7/1/2019 23:34'!eliminarRespuesta: unaRespuesta	respuestas remove: unaRespuesta! !!Usuario methodsFor: 'api' stamp: 'GitHub 6/30/2019 16:38:45'!agregarPregunta: unaPregunta	preguntas add: unaPregunta! !!Usuario methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:23'!conocerPreguntasRelevantes	"Retorna las Preguntas de los tópicos de interés del Usuario o realizada por alguno de los usuarios a quienes sigue"	| preguntasRelevantes |	preguntasRelevantes := Set new.	tópicosInterés do: [ :tópico | preguntasRelevantes addAll: tópico conocerPreguntas ].	sigueA do: [ :usuario | preguntasRelevantes addAll: usuario conocerPreguntas ].	^ preguntasRelevantes ! !!Usuario methodsFor: 'api' stamp: 'GitHub 6/30/2019 16:38:45'!seguirA: unUsuario	sigueA add: unUsuario! !!Usuario methodsFor: 'api' stamp: 'GitHub 6/30/2019 16:38:45'!agregarRespuesta: unaRespuesta	respuestas add: unaRespuesta! !!Usuario methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:03'!conocerPreguntas	"Retorna las Preguntas del Usuario (una copia para no romper el encapsulamiento de la colección)"	^ preguntas copy! !!Usuario methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:03'!conocerRespuestas	"Retorna las Respuestas del Usuario (una copia para no romper el encapsulamiento de la colección)"	^ respuestas copy! !!Usuario methodsFor: 'api' stamp: 'GonzaloUlla 6/30/2019 19:15'!conocerTópicosInterés	"Retorna los Tópicos de Interés del Usuario (una copia para no romper el encapsulamiento de la colección)"	^ tópicosInterés copy! !!Usuario methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!contraseña: anObject	contraseña := anObject! !!Usuario methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!contraseña	^ contraseña! !!Usuario methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!fechaCreación	^ fechaCreación! !!Usuario methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!nombre: anObject	nombre := anObject! !!Usuario methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!fechaCreación: anObject	fechaCreación := anObject! !!Usuario methodsFor: 'accessing' stamp: 'GitHub 6/30/2019 16:38:45'!nombre	^ nombre! !!Usuario methodsFor: 'converting' stamp: 'GonzaloUlla 6/30/2019 18:17'!respuestasAsString	"Retorna Respuestas como un String"	| retorno |	retorno := 'RESPUESTAS' , String cr.	respuestas do: [ :x | retorno := retorno , x asString ].	^ retorno! !!Usuario methodsFor: 'converting' stamp: 'GonzaloUlla 6/30/2019 18:18'!preguntasAsString	"Retorna Preguntas como un String"	| retorno |	retorno := 'PREGUNTAS' , String cr.	preguntas do: [ :x | retorno := retorno , x asString ].	^ retorno! !!Usuario methodsFor: 'initialization' stamp: 'GonzaloUlla 6/30/2019 17:20'!initialize	"Inicialización de un Usuario"	super initialize.	nombre := ''.	contraseña := ''.	fechaCreación := DateAndTime now.	tópicosInterés := OrderedCollection new.	sigueA := OrderedCollection new.	preguntas := OrderedCollection new.	respuestas := OrderedCollection new! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: 'conocerPreguntas'!!Usuario class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 17:23'!nombre: unNombre contraseña: unaContraseña	"Constructor de Usuario"	| nuevoUsuario |	nuevoUsuario := self new.	nuevoUsuario nombre: unNombre.	nuevoUsuario contraseña: unaContraseña.	nuevoUsuario fechaCreación: DateAndTime now.	^ nuevoUsuario! !!Usuario class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 17:23'!nombre: unNombre contraseña: unaContraseña fechaCreación: unaFecha	"Constructor de Usuario con fecha de creación"	| nuevoUsuario |	nuevoUsuario := self new.	nuevoUsuario nombre: unNombre.	nuevoUsuario contraseña: unaContraseña.	nuevoUsuario fechaCreación: unaFecha.	^ nuevoUsuario! !Object subclass: #Voto	instanceVariableNames: 'usuario fechaCreación entrada'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-TyH-TP-Model'!!Voto commentStamp: '<historical>' prior: 0!Class part:  "Represento un Voto en CuOOra".Responsibility part: "Lo que hago:  Permito crear un Voto, tanto positivo como negativo, a una Entrada en CuOOra"Collaborators Part: "Entradas y Usuarios"!!Voto methodsFor: 'accessing' stamp: 'GonzaloUlla 6/30/2019 18:58'!entrada	^ entrada! !!Voto methodsFor: 'accessing' stamp: 'GonzaloUlla 6/30/2019 18:58'!entrada: anObject	entrada := anObject! !!Voto methodsFor: 'accessing' stamp: 'GonzaloUlla 6/30/2019 18:58'!usuario: anObject	usuario := anObject! !!Voto methodsFor: 'accessing' stamp: 'GonzaloUlla 6/30/2019 18:58'!fechaCreación	^ fechaCreación! !!Voto methodsFor: 'accessing' stamp: 'GonzaloUlla 6/30/2019 18:58'!fechaCreación: anObject	fechaCreación := anObject! !!Voto methodsFor: 'accessing' stamp: 'GonzaloUlla 6/30/2019 18:58'!usuario	^ usuario! !!Voto methodsFor: 'initialization' stamp: 'GonzaloUlla 6/30/2019 19:01'!initialize	"Inicialización de un Voto"	fechaCreación := DateAndTime now! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Voto class	instanceVariableNames: ''!!Voto class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 18:57'!usuario: unUsuario entrada: unaEntrada	"Constructor de Voto"	| nuevoVoto |	nuevoVoto := self new.	nuevoVoto usuario: unUsuario.	nuevoVoto entrada: unaEntrada.	nuevoVoto fechaCreación: DateAndTime now.	^ nuevoVoto! !!Voto class methodsFor: 'instance creation' stamp: 'GonzaloUlla 6/30/2019 19:02'!usuario: unUsuario entrada: unaEntrada fechaCreación: unaFecha	"Constructor de Voto"	| nuevoVoto |	nuevoVoto := self new.	nuevoVoto usuario: unUsuario.	nuevoVoto entrada: unaEntrada.	nuevoVoto fechaCreación: unaFecha.	^ nuevoVoto! !